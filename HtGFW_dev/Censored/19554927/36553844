19554927
article
36553844
https://zhuanlan.zhihu.com/p/36553844
楼源畅
刷src从放弃到入门

一、瞎扯部分 『现在安全技术岗招人拿到的简历，除了工作比较久的，大部分的应届毕业生啥的，10个里能有近9个写有渗透测试能力，然后9个里，8个的渗透测试其实是黑盒漏洞测试，提权、域渗透等后渗透部分基本是0，8个里问到怎么发现的漏洞，能有7个说不清楚…还有个共同的点是简历里一般会有各种CTF比赛获奖记录，SRC挖洞记录，SRC挖洞就不说了，现在CTF比赛那么容易获奖吗？很多比赛还都没听过…还有个感受，两极分化严重，好的确实不错，踏实;实际没啥东西的一般自我感觉良好』 …………………………………………引言自安全圈某大佬……………………………………回顾起三个月前的自己，就是大佬所吐槽的那一类人。『8个的渗透渗透测试其实是黑盒漏洞测试』emm...毕竟白盒代码审计不会嘛 『提权、与渗透等后渗透部分基本是0』爆破出一个弱口令就高兴坏了赶紧去提交了，生怕被人重复了，提权？后渗透？什么鬼，能吃吗？ 『8个里问到怎么发现的漏洞，能有7个说不清楚』要是都能说清楚还怎么继续做菜逼啊！CTF部分不解读，自己不玩CTF。玩笑归玩笑，大佬说的这几点都是直击要害的，对很多刚入门想要从事安全，吃这口饭的人，反思过后补足自己的不足才是正道。那么我是如何从放弃到入门，最后顺利找到一份安全工作的，以下，大佬可以撤退了，萌新或者有一点基础却不知道如何入门的小菜，可以看看。为了避免空口说瞎话的嫌疑，这里贴上我个人在菜鸟src的排名，目前还有若干漏洞的积分没加上来，暂时排16位。二、刷src需要做哪些准备  1.首先你得准备好一个自己搭建的乌云漏洞库（也可以直击用网上的景象，但不建议，以前偷懒就直接用在线的，但是好多个开一会儿就关了或者就没了，老老实实自己搭一个吧）这里推荐GitHub上的一个虚拟机项目：https://github.com/hanc00l/wooyun_public 下这个↓下载好之后直接拖到虚拟机里运行，打开后，ifconfig 能看到搭建的虚拟机服务器占用的局域网网点，在本机浏览器打开便可以开始看了。！漏洞库一定要刷，这个是最直接的让自己了解安全全貌的方式。也是成长最快的路径！（Tips：这个漏洞库好在可以查询关键字，但是关键字查询如果多页，但是没法翻页，这里可以通过在url后拼接 &page=2 来实现翻页 例如：   http://192.168.190.129/searchbug.php?detail=on&q=aspcms&page=2）2. 你需要准备一些常规的渗透工具，并且知道常规的一些用法，例如kali（集成了sqlmap，nmap，python运行环境）、burpsuite、layer的域名爆破或者 lijiejie在GitHub上的项目 subdomain.py 。另外推荐一个指纹识别的网站http://www.yunsee.cn。Tips：layer子域爆破用的是字典，比较暴力，但是会占用cpu，subdomain比较灵活，可以搭配着来，另外，Googlehacking语法也是一个很重要的搜索子域名，后台，敏感文件的方式，这里不再赘述。在用yunsee做指纹是别的时候，有时候可以找到一些通用型系统，比如用友，金蝶，或者一些开源cms，这种时候就可以在乌云漏洞库里搜索相关漏洞，对新手来说，这是一个边实践边学习的过程，复测过一次，下次就知道了。另外乌云漏洞库做搜索的时候，可以搜索一些存在漏洞的目录，比如用友系统的 /uapws/ 。自己实际碰到的可以举一反三。3. 找一个稳定流畅的vpn，这个不光光是一个渗透的习惯，wooyun 16年关站，所以漏洞库的漏洞也定格在了那里，有时候就需要上https://www.exploit-db.com/去搜索一些最新漏洞的exp，这个网站用的google的验证码，没vpn是没法搜索的。实际渗透中，之前有挖到一个zabbix的注入，这个就是在exploit-db上找到的exp。Tips：https://www.exploit-db.com/ 上的exp并不全，最全的是 http://cve.mitre.org/ 在上面可以搜索年份或者组件信息，搜索出cve编号，找不到cve相关的exp可以去GitHub上直接搜cve编号。4. 对可能存在的漏洞类型，大概要有点b数，这里给一个流出的绿盟的加固手册。https://wenku.baidu.com/view/d5be9763a22d7375a417866fb84ae45c3b35c2a5.html对照这个手册看一下，里面有些漏洞虽然老，比如heartbleed，但是还是存在的。5. 在微博或者Twitter多关注一些大牛，一手漏洞都是从这上面流出来的，比如前不久的weblogic的RCE。三、怎么刷 1.每个src大佬，都有一套属于自己的渗透测试流程，该怎么刷其实得根据自己实际情况来，但是有一些常识，能够让你少走一些弯路。『前台相对安全，大多数漏洞都在后台』，这句话严格来说，不完全对，因为前台同样会存在很多危害严重的逻辑漏洞，csrf，xss，钓鱼之类漏洞，只是相比较来说，前端框架下，很多时候只是给用户呈现html页面，或者用的一些流行框架，很多功能点都在后台。后台有身份认证的一道关卡，开发人员在开发的时候会忽略一些对参数的过滤，以及黑名单白名单的限制，只是相对而言。至于『渗透70%要看信息搜集』这句也是对上面一句的衍生，很多时候通过一个弱口令进入后台，找出一堆sql注入，xss，甚至上传getshell，甚至一个vpn弱口令进入内网，都是常规操作。2.渗透讲究一个耐心，仔细。域名搜集得怎么样了，每个ip有没有用nmap去扫过端口，自己实战中就碰到过nmap扫端口结果出来一个列目录漏洞，有很多敏感信息，直接就是严重级别的漏洞。还有在测试逻辑漏洞的时候，参数每个都看过了吗？一整套流程的包都抓过了吗，有没有另外备一台手机，或者手机小号来接受短信？发现参数改负过滤了，那么有没有尝试订单合并来绕过呢？很多时候我们不能像审计牛那样直接把源码审一遍，然后提一个rce，技术有限的前提下，我们能做到的就是耐心，仔细。四、一路走来的感悟我相信很多新手，会困惑一个问题，为什么要学习一门编程语言。这个问题在我提交了一些高危漏洞之后，以及实际工作之后渐渐明白其中的意义。简单的说，网上的exp，你看不懂payload没有问题，但是python脚本你得会用吧？简单的修改得会吧？实际工作中，上手的一个app项目，数据包是用加密传输的，用了aes的加密。可能很多时候碰到这样的，换做是我，还没在工作的时候，就放弃了，去测别的吧，但是现在这是工作了，你该怎么办？App首先要脱壳，不会，现学。脱壳完了之后反编译，不会，现学。反编译之后去源码里找key，偏移值，去溯源加密方式，Java代码看不懂怎么办？这些问题，事后都顺利解决了，但是最重要的是让我明白懂代码的含义。安全，不只是web安全。通过web入门应该说是比较容易的，也让我这个大学学的文科的人顺利找到了一份安全工作。但是这远远不够，如果只会这些皮毛，脚本小子都算不上，只有不断学习，前面的路才一片广阔。